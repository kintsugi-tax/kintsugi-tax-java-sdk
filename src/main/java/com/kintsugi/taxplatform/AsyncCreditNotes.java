/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform;

import static com.kintsugi.taxplatform.operations.Operations.AsyncRequestOperation;

import com.kintsugi.taxplatform.models.components.CreditNoteCreate;
import com.kintsugi.taxplatform.models.operations.POSTCreateCreditNoteByTransactionIdRequest;
import com.kintsugi.taxplatform.models.operations.async.POSTCreateCreditNoteByTransactionIdRequestBuilder;
import com.kintsugi.taxplatform.models.operations.async.POSTCreateCreditNoteByTransactionIdResponse;
import com.kintsugi.taxplatform.operations.POSTCreateCreditNoteByTransactionId;
import java.lang.String;
import java.util.concurrent.CompletableFuture;


public class AsyncCreditNotes {
    private final SDKConfiguration sdkConfiguration;
    private final CreditNotes syncSDK;

    AsyncCreditNotes(CreditNotes syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public CreditNotes sync() {
        return syncSDK;
    }


    /**
     * Create Credit Note By Transaction Id
     * 
     * <p>Create a new credit note for a specific transaction.
     * 
     * @return The async call builder
     */
    public POSTCreateCreditNoteByTransactionIdRequestBuilder create() {
        return new POSTCreateCreditNoteByTransactionIdRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Credit Note By Transaction Id
     * 
     * <p>Create a new credit note for a specific transaction.
     * 
     * @param originalTransactionId 
     * @param creditNoteCreate 
     * @return CompletableFuture&lt;POSTCreateCreditNoteByTransactionIdResponse&gt; - The async response
     */
    public CompletableFuture<POSTCreateCreditNoteByTransactionIdResponse> create(String originalTransactionId, CreditNoteCreate creditNoteCreate) {
        POSTCreateCreditNoteByTransactionIdRequest request =
            POSTCreateCreditNoteByTransactionIdRequest
                .builder()
                .originalTransactionId(originalTransactionId)
                .creditNoteCreate(creditNoteCreate)
                .build();
        AsyncRequestOperation<POSTCreateCreditNoteByTransactionIdRequest, POSTCreateCreditNoteByTransactionIdResponse> operation
              = new POSTCreateCreditNoteByTransactionId.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
