/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform;

import static com.kintsugi.taxplatform.operations.Operations.RequestOperation;

import com.kintsugi.taxplatform.models.operations.GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest;
import com.kintsugi.taxplatform.models.operations.GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequestBuilder;
import com.kintsugi.taxplatform.models.operations.GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetResponse;
import com.kintsugi.taxplatform.operations.GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGet;
import com.kintsugi.taxplatform.utils.Headers;
import java.lang.String;


public class CustomersTransactions {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncCustomersTransactions asyncSDK;

    CustomersTransactions(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncCustomersTransactions(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncCustomersTransactions async() {
        return asyncSDK;
    }

    /**
     * Get Transactions By Customer Id
     * 
     * <p>Get a list of transactions for a customer by their unique ID.
     * 
     * @return The call builder
     */
    public GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequestBuilder getByCustomerId() {
        return new GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Transactions By Customer Id
     * 
     * <p>Get a list of transactions for a customer by their unique ID.
     * 
     * @param customerId 
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetResponse getByCustomerId(String customerId) {
        GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest request =
            GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest
                .builder()
                .customerId(customerId)
                .build();
        RequestOperation<GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest, GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetResponse> operation
              = new GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGet.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
