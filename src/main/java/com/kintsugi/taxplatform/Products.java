/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform;

import static com.kintsugi.taxplatform.operations.Operations.RequestOperation;
import static com.kintsugi.taxplatform.operations.Operations.RequestlessOperation;

import com.kintsugi.taxplatform.models.components.ProductCreateManual;
import com.kintsugi.taxplatform.models.components.ProductUpdate;
import com.kintsugi.taxplatform.models.operations.CreateProductV1ProductsPostRequestBuilder;
import com.kintsugi.taxplatform.models.operations.CreateProductV1ProductsPostResponse;
import com.kintsugi.taxplatform.models.operations.GetProductByIdV1ProductsProductIdGetRequest;
import com.kintsugi.taxplatform.models.operations.GetProductByIdV1ProductsProductIdGetRequestBuilder;
import com.kintsugi.taxplatform.models.operations.GetProductByIdV1ProductsProductIdGetResponse;
import com.kintsugi.taxplatform.models.operations.GetProductCategoriesV1ProductsCategoriesGetRequestBuilder;
import com.kintsugi.taxplatform.models.operations.GetProductCategoriesV1ProductsCategoriesGetResponse;
import com.kintsugi.taxplatform.models.operations.GetProductsV1ProductsGetRequest;
import com.kintsugi.taxplatform.models.operations.GetProductsV1ProductsGetRequestBuilder;
import com.kintsugi.taxplatform.models.operations.GetProductsV1ProductsGetResponse;
import com.kintsugi.taxplatform.models.operations.UpdateProductV1ProductsProductIdPutRequest;
import com.kintsugi.taxplatform.models.operations.UpdateProductV1ProductsProductIdPutRequestBuilder;
import com.kintsugi.taxplatform.models.operations.UpdateProductV1ProductsProductIdPutResponse;
import com.kintsugi.taxplatform.operations.CreateProductV1ProductsPost;
import com.kintsugi.taxplatform.operations.GetProductByIdV1ProductsProductIdGet;
import com.kintsugi.taxplatform.operations.GetProductCategoriesV1ProductsCategoriesGet;
import com.kintsugi.taxplatform.operations.GetProductsV1ProductsGet;
import com.kintsugi.taxplatform.operations.UpdateProductV1ProductsProductIdPut;
import com.kintsugi.taxplatform.utils.Headers;
import java.lang.Exception;
import java.lang.String;


public class Products {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncProducts asyncSDK;

    Products(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncProducts(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncProducts async() {
        return asyncSDK;
    }

    /**
     * Get Products
     * 
     * <p>Retrieve a paginated list of products based on filters and search query.
     * 
     * @return The call builder
     */
    public GetProductsV1ProductsGetRequestBuilder get() {
        return new GetProductsV1ProductsGetRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Products
     * 
     * <p>Retrieve a paginated list of products based on filters and search query.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetProductsV1ProductsGetResponse get(GetProductsV1ProductsGetRequest request) throws Exception {
        RequestOperation<GetProductsV1ProductsGetRequest, GetProductsV1ProductsGetResponse> operation
              = new GetProductsV1ProductsGet.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create Product
     * 
     * <p>The Create Product API allows users to manually create a new product
     *     in the system. This includes specifying product details such as category,
     *     subcategory, and tax exemption status, etc.
     * 
     * @return The call builder
     */
    public CreateProductV1ProductsPostRequestBuilder create() {
        return new CreateProductV1ProductsPostRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Product
     * 
     * <p>The Create Product API allows users to manually create a new product
     *     in the system. This includes specifying product details such as category,
     *     subcategory, and tax exemption status, etc.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateProductV1ProductsPostResponse create(ProductCreateManual request) throws Exception {
        RequestOperation<ProductCreateManual, CreateProductV1ProductsPostResponse> operation
              = new CreateProductV1ProductsPost.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get Product By Id
     * 
     * <p>The Get Product By ID API retrieves detailed information about
     *     a single product by its unique ID. This API helps in viewing the specific details
     *     of a product, including its attributes, status, and categorization.
     * 
     * @return The call builder
     */
    public GetProductByIdV1ProductsProductIdGetRequestBuilder getById() {
        return new GetProductByIdV1ProductsProductIdGetRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Product By Id
     * 
     * <p>The Get Product By ID API retrieves detailed information about
     *     a single product by its unique ID. This API helps in viewing the specific details
     *     of a product, including its attributes, status, and categorization.
     * 
     * @param productId The unique identifier for the product you want to retrieve.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetProductByIdV1ProductsProductIdGetResponse getById(String productId) throws Exception {
        GetProductByIdV1ProductsProductIdGetRequest request =
            GetProductByIdV1ProductsProductIdGetRequest
                .builder()
                .productId(productId)
                .build();
        RequestOperation<GetProductByIdV1ProductsProductIdGetRequest, GetProductByIdV1ProductsProductIdGetResponse> operation
              = new GetProductByIdV1ProductsProductIdGet.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update Product
     * 
     * <p>The Update Product API allows users to modify the details of
     *     an existing product identified by its unique product_id
     * 
     * @return The call builder
     */
    public UpdateProductV1ProductsProductIdPutRequestBuilder update() {
        return new UpdateProductV1ProductsProductIdPutRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Product
     * 
     * <p>The Update Product API allows users to modify the details of
     *     an existing product identified by its unique product_id
     * 
     * @param productId Unique identifier of the product to be updated.
     * @param productUpdate 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateProductV1ProductsProductIdPutResponse update(String productId, ProductUpdate productUpdate) throws Exception {
        UpdateProductV1ProductsProductIdPutRequest request =
            UpdateProductV1ProductsProductIdPutRequest
                .builder()
                .productId(productId)
                .productUpdate(productUpdate)
                .build();
        RequestOperation<UpdateProductV1ProductsProductIdPutRequest, UpdateProductV1ProductsProductIdPutResponse> operation
              = new UpdateProductV1ProductsProductIdPut.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get Product Categories
     * 
     * <p>The Get Product Categories API retrieves all
     *     product categories.  This endpoint helps users understand and select the
     *     appropriate categories for their products.
     * 
     * @return The call builder
     */
    public GetProductCategoriesV1ProductsCategoriesGetRequestBuilder getCategories() {
        return new GetProductCategoriesV1ProductsCategoriesGetRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Product Categories
     * 
     * <p>The Get Product Categories API retrieves all
     *     product categories.  This endpoint helps users understand and select the
     *     appropriate categories for their products.
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetProductCategoriesV1ProductsCategoriesGetResponse getCategoriesDirect() throws Exception {
        RequestlessOperation<GetProductCategoriesV1ProductsCategoriesGetResponse> operation
            = new GetProductCategoriesV1ProductsCategoriesGet.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest());
    }

}
