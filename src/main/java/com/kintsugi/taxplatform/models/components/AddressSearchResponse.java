/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;


public class AddressSearchResponse {

    @JsonProperty("address_submitted")
    private AddressSubmittedResponse addressSubmitted;


    @JsonProperty("response_address")
    private AddressResponseData responseAddress;

    /**
     * Indicates if the address was VERIFIED, PARTIALLY_VERIFIED, INVALID, UNVERIFIABLE, BLANK
     */
    @JsonProperty("verification_status")
    private String verificationStatus;

    /**
     * List of additional fields added to enrich the address
     */
    @JsonProperty("enrich_fields")
    private List<String> enrichFields;

    @JsonCreator
    public AddressSearchResponse(
            @JsonProperty("address_submitted") AddressSubmittedResponse addressSubmitted,
            @JsonProperty("response_address") AddressResponseData responseAddress,
            @JsonProperty("verification_status") String verificationStatus,
            @JsonProperty("enrich_fields") List<String> enrichFields) {
        Utils.checkNotNull(addressSubmitted, "addressSubmitted");
        Utils.checkNotNull(responseAddress, "responseAddress");
        Utils.checkNotNull(verificationStatus, "verificationStatus");
        Utils.checkNotNull(enrichFields, "enrichFields");
        this.addressSubmitted = addressSubmitted;
        this.responseAddress = responseAddress;
        this.verificationStatus = verificationStatus;
        this.enrichFields = enrichFields;
    }

    @JsonIgnore
    public AddressSubmittedResponse addressSubmitted() {
        return addressSubmitted;
    }

    @JsonIgnore
    public AddressResponseData responseAddress() {
        return responseAddress;
    }

    /**
     * Indicates if the address was VERIFIED, PARTIALLY_VERIFIED, INVALID, UNVERIFIABLE, BLANK
     */
    @JsonIgnore
    public String verificationStatus() {
        return verificationStatus;
    }

    /**
     * List of additional fields added to enrich the address
     */
    @JsonIgnore
    public List<String> enrichFields() {
        return enrichFields;
    }

    public static Builder builder() {
        return new Builder();
    }


    public AddressSearchResponse withAddressSubmitted(AddressSubmittedResponse addressSubmitted) {
        Utils.checkNotNull(addressSubmitted, "addressSubmitted");
        this.addressSubmitted = addressSubmitted;
        return this;
    }

    public AddressSearchResponse withResponseAddress(AddressResponseData responseAddress) {
        Utils.checkNotNull(responseAddress, "responseAddress");
        this.responseAddress = responseAddress;
        return this;
    }

    /**
     * Indicates if the address was VERIFIED, PARTIALLY_VERIFIED, INVALID, UNVERIFIABLE, BLANK
     */
    public AddressSearchResponse withVerificationStatus(String verificationStatus) {
        Utils.checkNotNull(verificationStatus, "verificationStatus");
        this.verificationStatus = verificationStatus;
        return this;
    }

    /**
     * List of additional fields added to enrich the address
     */
    public AddressSearchResponse withEnrichFields(List<String> enrichFields) {
        Utils.checkNotNull(enrichFields, "enrichFields");
        this.enrichFields = enrichFields;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AddressSearchResponse other = (AddressSearchResponse) o;
        return 
            Utils.enhancedDeepEquals(this.addressSubmitted, other.addressSubmitted) &&
            Utils.enhancedDeepEquals(this.responseAddress, other.responseAddress) &&
            Utils.enhancedDeepEquals(this.verificationStatus, other.verificationStatus) &&
            Utils.enhancedDeepEquals(this.enrichFields, other.enrichFields);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            addressSubmitted, responseAddress, verificationStatus,
            enrichFields);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AddressSearchResponse.class,
                "addressSubmitted", addressSubmitted,
                "responseAddress", responseAddress,
                "verificationStatus", verificationStatus,
                "enrichFields", enrichFields);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private AddressSubmittedResponse addressSubmitted;

        private AddressResponseData responseAddress;

        private String verificationStatus;

        private List<String> enrichFields;

        private Builder() {
          // force use of static builder() method
        }


        public Builder addressSubmitted(AddressSubmittedResponse addressSubmitted) {
            Utils.checkNotNull(addressSubmitted, "addressSubmitted");
            this.addressSubmitted = addressSubmitted;
            return this;
        }


        public Builder responseAddress(AddressResponseData responseAddress) {
            Utils.checkNotNull(responseAddress, "responseAddress");
            this.responseAddress = responseAddress;
            return this;
        }


        /**
         * Indicates if the address was VERIFIED, PARTIALLY_VERIFIED, INVALID, UNVERIFIABLE, BLANK
         */
        public Builder verificationStatus(String verificationStatus) {
            Utils.checkNotNull(verificationStatus, "verificationStatus");
            this.verificationStatus = verificationStatus;
            return this;
        }


        /**
         * List of additional fields added to enrich the address
         */
        public Builder enrichFields(List<String> enrichFields) {
            Utils.checkNotNull(enrichFields, "enrichFields");
            this.enrichFields = enrichFields;
            return this;
        }

        public AddressSearchResponse build() {

            return new AddressSearchResponse(
                addressSubmitted, responseAddress, verificationStatus,
                enrichFields);
        }

    }
}
