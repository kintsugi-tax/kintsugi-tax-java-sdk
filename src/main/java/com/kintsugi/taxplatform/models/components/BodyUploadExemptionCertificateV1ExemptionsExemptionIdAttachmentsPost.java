/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.kintsugi.taxplatform.utils.SpeakeasyMetadata;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class BodyUploadExemptionCertificateV1ExemptionsExemptionIdAttachmentsPost {
    /**
     * The file to be uploaded. Supported format: PDF. Max size: 10 MB.
     */
    @SpeakeasyMetadata("multipartForm:file,name=file")
    private File file;

    @JsonCreator
    public BodyUploadExemptionCertificateV1ExemptionsExemptionIdAttachmentsPost(
            File file) {
        Utils.checkNotNull(file, "file");
        this.file = file;
    }

    /**
     * The file to be uploaded. Supported format: PDF. Max size: 10 MB.
     */
    @JsonIgnore
    public File file() {
        return file;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The file to be uploaded. Supported format: PDF. Max size: 10 MB.
     */
    public BodyUploadExemptionCertificateV1ExemptionsExemptionIdAttachmentsPost withFile(File file) {
        Utils.checkNotNull(file, "file");
        this.file = file;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BodyUploadExemptionCertificateV1ExemptionsExemptionIdAttachmentsPost other = (BodyUploadExemptionCertificateV1ExemptionsExemptionIdAttachmentsPost) o;
        return 
            Utils.enhancedDeepEquals(this.file, other.file);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            file);
    }
    
    @Override
    public String toString() {
        return Utils.toString(BodyUploadExemptionCertificateV1ExemptionsExemptionIdAttachmentsPost.class,
                "file", file);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private File file;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The file to be uploaded. Supported format: PDF. Max size: 10 MB.
         */
        public Builder file(File file) {
            Utils.checkNotNull(file, "file");
            this.file = file;
            return this;
        }

        public BodyUploadExemptionCertificateV1ExemptionsExemptionIdAttachmentsPost build() {

            return new BodyUploadExemptionCertificateV1ExemptionsExemptionIdAttachmentsPost(
                file);
        }

    }
}
