/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

public enum SourceEnum {
    BIGCOMMERCE("BIGCOMMERCE"),
    BESTBUY("BESTBUY"),
    BUNNY("BUNNY"),
    CHARGEBEE("CHARGEBEE"),
    SHOPIFY("SHOPIFY"),
    STRIPE("STRIPE"),
    AMAZON("AMAZON"),
    TIKTOK("TIKTOK"),
    CUSTOM("CUSTOM"),
    UNKNOWN("UNKNOWN"),
    IMPORT("IMPORT"),
    ZUORA("ZUORA"),
    APIDECK("APIDECK"),
    QUICKBOOKS("QUICKBOOKS"),
    API("API"),
    APPLE_APP_STORE("APPLE_APP_STORE"),
    GOOGLE_APP_STORE("GOOGLE_APP_STORE"),
    WALMART("WALMART"),
    PAYPAL("PAYPAL"),
    NETSUITE("NETSUITE"),
    XERO("XERO"),
    MAXIO("MAXIO"),
    RECURLY("RECURLY"),
    SALESFORCE("SALESFORCE"),
    ETSY("ETSY"),
    EBAY("EBAY"),
    WIX("WIX"),
    SQUARESPACE("SQUARESPACE"),
    WOOCOMMERCE("WOOCOMMERCE"),
    MAGENTO("MAGENTO"),
    BILLING_PLATFORM("BILLING_PLATFORM"),
    DEEL("DEEL"),
    RIPPLING("RIPPLING"),
    GUSTO("GUSTO"),
    FACEBOOK("FACEBOOK"),
    OTHER("OTHER"),
    ORDWAY("ORDWAY"),
    INSTAGRAM("INSTAGRAM"),
    PINTEREST("PINTEREST"),
    WAYFAIR("WAYFAIR"),
    WISH("WISH"),
    POS("POS"),
    TARGET("TARGET"),
    NEWEGG("NEWEGG"),
    GROUPON("GROUPON"),
    GOOGLE_EXPRESS("GOOGLE_EXPRESS"),
    NOCNOC("NOCNOC"),
    MERCADO_LIBRE("MERCADO_LIBRE"),
    MODALYST("MODALYST"),
    NORDSTROM("NORDSTROM"),
    FAIRE("FAIRE"),
    SHOPWARE("SHOPWARE"),
    ZOHO("ZOHO"),
    SAGE_INTACCT("SAGE-INTACCT"),
    AIRWALLEX("AIRWALLEX"),
    ORB("ORB");

    @JsonValue
    private final String value;

    SourceEnum(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<SourceEnum> fromValue(String value) {
        for (SourceEnum o: SourceEnum.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

