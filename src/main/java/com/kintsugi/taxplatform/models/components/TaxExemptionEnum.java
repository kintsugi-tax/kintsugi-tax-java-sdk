/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * TaxExemptionEnum
 * 
 * <p>This enum is used to determine if a transaction is exempt from tax.
 */
public enum TaxExemptionEnum {
    PRODUCT("PRODUCT"),
    TRANSACTION("TRANSACTION"),
    CUSTOMER("CUSTOMER"),
    REGION("REGION"),
    REVERSE_CHARGE("REVERSE_CHARGE"),
    ZERO_RATE_TAX("ZERO_RATE_TAX"),
    HIGH_VALUE_PHYSICAL_GOODS("HIGH_VALUE_PHYSICAL_GOODS"),
    EXPORT("EXPORT"),
    ZERO_VALUE_ITEM("ZERO_VALUE_ITEM"),
    NO_RULE_FOUND("NO_RULE_FOUND"),
    IMPORTED("IMPORTED");

    @JsonValue
    private final String value;

    TaxExemptionEnum(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<TaxExemptionEnum> fromValue(String value) {
        for (TaxExemptionEnum o: TaxExemptionEnum.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

