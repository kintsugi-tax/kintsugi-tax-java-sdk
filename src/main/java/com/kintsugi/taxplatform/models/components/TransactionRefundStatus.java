/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * TransactionRefundStatus
 * 
 * <p>Shopify has 2 order statuses for refund case: refunded and partially_refunded
 * If the given order has different status from these 2, we will set the
 * transaction's refund_status to PARTIALLY_REFUNDED by default.
 */
public enum TransactionRefundStatus {
    FULLY_REFUNDED("FULLY_REFUNDED"),
    PARTIALLY_REFUNDED("PARTIALLY_REFUNDED");

    @JsonValue
    private final String value;

    TransactionRefundStatus(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<TransactionRefundStatus> fromValue(String value) {
        for (TransactionRefundStatus o: TransactionRefundStatus.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

