/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.operations;

import static com.kintsugi.taxplatform.operations.Operations.RequestOperation;

import com.kintsugi.taxplatform.SDKConfiguration;
import com.kintsugi.taxplatform.models.components.ProductCreateManual;
import com.kintsugi.taxplatform.operations.CreateProductV1ProductsPostOperation;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class CreateProductV1ProductsPostRequestBuilder {

    private CreateProductV1ProductsPostSecurity security;
    private Optional<String> xOrganizationId = Optional.empty();
    private ProductCreateManual productCreateManual;
    private final SDKConfiguration sdkConfiguration;

    public CreateProductV1ProductsPostRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public CreateProductV1ProductsPostRequestBuilder security(CreateProductV1ProductsPostSecurity security) {
        Utils.checkNotNull(security, "security");
        this.security = security;
        return this;
    }
                
    public CreateProductV1ProductsPostRequestBuilder xOrganizationId(String xOrganizationId) {
        Utils.checkNotNull(xOrganizationId, "xOrganizationId");
        this.xOrganizationId = Optional.of(xOrganizationId);
        return this;
    }

    public CreateProductV1ProductsPostRequestBuilder xOrganizationId(Optional<String> xOrganizationId) {
        Utils.checkNotNull(xOrganizationId, "xOrganizationId");
        this.xOrganizationId = xOrganizationId;
        return this;
    }

    public CreateProductV1ProductsPostRequestBuilder productCreateManual(ProductCreateManual productCreateManual) {
        Utils.checkNotNull(productCreateManual, "productCreateManual");
        this.productCreateManual = productCreateManual;
        return this;
    }


    private CreateProductV1ProductsPostRequest buildRequest() {

        CreateProductV1ProductsPostRequest request = new CreateProductV1ProductsPostRequest(xOrganizationId,
            productCreateManual);

        return request;
    }

    public CreateProductV1ProductsPostResponse call() throws Exception {
        
        RequestOperation<CreateProductV1ProductsPostRequest, CreateProductV1ProductsPostResponse> operation
              = new CreateProductV1ProductsPostOperation(sdkConfiguration, security);
        CreateProductV1ProductsPostRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
