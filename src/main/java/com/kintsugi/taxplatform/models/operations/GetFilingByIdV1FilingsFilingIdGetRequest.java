/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.kintsugi.taxplatform.utils.SpeakeasyMetadata;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class GetFilingByIdV1FilingsFilingIdGetRequest {
    /**
     * Unique identifier for the filing to retrieve.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=filing_id")
    private String filingId;

    @JsonCreator
    public GetFilingByIdV1FilingsFilingIdGetRequest(
            String filingId) {
        Utils.checkNotNull(filingId, "filingId");
        this.filingId = filingId;
    }

    /**
     * Unique identifier for the filing to retrieve.
     */
    @JsonIgnore
    public String filingId() {
        return filingId;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Unique identifier for the filing to retrieve.
     */
    public GetFilingByIdV1FilingsFilingIdGetRequest withFilingId(String filingId) {
        Utils.checkNotNull(filingId, "filingId");
        this.filingId = filingId;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetFilingByIdV1FilingsFilingIdGetRequest other = (GetFilingByIdV1FilingsFilingIdGetRequest) o;
        return 
            Utils.enhancedDeepEquals(this.filingId, other.filingId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            filingId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetFilingByIdV1FilingsFilingIdGetRequest.class,
                "filingId", filingId);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String filingId;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Unique identifier for the filing to retrieve.
         */
        public Builder filingId(String filingId) {
            Utils.checkNotNull(filingId, "filingId");
            this.filingId = filingId;
            return this;
        }

        public GetFilingByIdV1FilingsFilingIdGetRequest build() {

            return new GetFilingByIdV1FilingsFilingIdGetRequest(
                filingId);
        }

    }
}
