/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.kintsugi.taxplatform.utils.SpeakeasyMetadata;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class GetRegistrationByIdV1RegistrationsRegistrationIdGetRequest {
    /**
     * The unique identifier of the
     *                                 registration to retrieve.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=registration_id")
    private String registrationId;

    @JsonCreator
    public GetRegistrationByIdV1RegistrationsRegistrationIdGetRequest(
            String registrationId) {
        Utils.checkNotNull(registrationId, "registrationId");
        this.registrationId = registrationId;
    }

    /**
     * The unique identifier of the
     *                                 registration to retrieve.
     */
    @JsonIgnore
    public String registrationId() {
        return registrationId;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The unique identifier of the
     *                                 registration to retrieve.
     */
    public GetRegistrationByIdV1RegistrationsRegistrationIdGetRequest withRegistrationId(String registrationId) {
        Utils.checkNotNull(registrationId, "registrationId");
        this.registrationId = registrationId;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetRegistrationByIdV1RegistrationsRegistrationIdGetRequest other = (GetRegistrationByIdV1RegistrationsRegistrationIdGetRequest) o;
        return 
            Utils.enhancedDeepEquals(this.registrationId, other.registrationId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            registrationId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetRegistrationByIdV1RegistrationsRegistrationIdGetRequest.class,
                "registrationId", registrationId);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String registrationId;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The unique identifier of the
         *                                 registration to retrieve.
         */
        public Builder registrationId(String registrationId) {
            Utils.checkNotNull(registrationId, "registrationId");
            this.registrationId = registrationId;
            return this;
        }

        public GetRegistrationByIdV1RegistrationsRegistrationIdGetRequest build() {

            return new GetRegistrationByIdV1RegistrationsRegistrationIdGetRequest(
                registrationId);
        }

    }
}
