/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.kintsugi.taxplatform.utils.SpeakeasyMetadata;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class GetTransactionByExternalIdV1TransactionsExternalExternalIdGetRequest {
    /**
     * The unique external identifier of the transaction.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=external_id")
    private String externalId;

    @JsonCreator
    public GetTransactionByExternalIdV1TransactionsExternalExternalIdGetRequest(
            String externalId) {
        Utils.checkNotNull(externalId, "externalId");
        this.externalId = externalId;
    }

    /**
     * The unique external identifier of the transaction.
     */
    @JsonIgnore
    public String externalId() {
        return externalId;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The unique external identifier of the transaction.
     */
    public GetTransactionByExternalIdV1TransactionsExternalExternalIdGetRequest withExternalId(String externalId) {
        Utils.checkNotNull(externalId, "externalId");
        this.externalId = externalId;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetTransactionByExternalIdV1TransactionsExternalExternalIdGetRequest other = (GetTransactionByExternalIdV1TransactionsExternalExternalIdGetRequest) o;
        return 
            Utils.enhancedDeepEquals(this.externalId, other.externalId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            externalId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetTransactionByExternalIdV1TransactionsExternalExternalIdGetRequest.class,
                "externalId", externalId);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String externalId;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The unique external identifier of the transaction.
         */
        public Builder externalId(String externalId) {
            Utils.checkNotNull(externalId, "externalId");
            this.externalId = externalId;
            return this;
        }

        public GetTransactionByExternalIdV1TransactionsExternalExternalIdGetRequest build() {

            return new GetTransactionByExternalIdV1TransactionsExternalExternalIdGetRequest(
                externalId);
        }

    }
}
