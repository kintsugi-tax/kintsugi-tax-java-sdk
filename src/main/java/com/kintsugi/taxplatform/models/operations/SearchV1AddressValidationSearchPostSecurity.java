/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.kintsugi.taxplatform.utils.HasSecurity;
import com.kintsugi.taxplatform.utils.SpeakeasyMetadata;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class SearchV1AddressValidationSearchPostSecurity implements HasSecurity {

    @SpeakeasyMetadata("security:scheme=true,type=apiKey,subtype=header,name=X-API-KEY")
    private String apiKeyHeader;

    @JsonCreator
    public SearchV1AddressValidationSearchPostSecurity(
            String apiKeyHeader) {
        Utils.checkNotNull(apiKeyHeader, "apiKeyHeader");
        this.apiKeyHeader = apiKeyHeader;
    }

    @JsonIgnore
    public String apiKeyHeader() {
        return apiKeyHeader;
    }

    public static Builder builder() {
        return new Builder();
    }


    public SearchV1AddressValidationSearchPostSecurity withAPIKeyHeader(String apiKeyHeader) {
        Utils.checkNotNull(apiKeyHeader, "apiKeyHeader");
        this.apiKeyHeader = apiKeyHeader;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SearchV1AddressValidationSearchPostSecurity other = (SearchV1AddressValidationSearchPostSecurity) o;
        return 
            Utils.enhancedDeepEquals(this.apiKeyHeader, other.apiKeyHeader);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            apiKeyHeader);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SearchV1AddressValidationSearchPostSecurity.class,
                "apiKeyHeader", apiKeyHeader);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String apiKeyHeader;

        private Builder() {
          // force use of static builder() method
        }


        public Builder apiKeyHeader(String apiKeyHeader) {
            Utils.checkNotNull(apiKeyHeader, "apiKeyHeader");
            this.apiKeyHeader = apiKeyHeader;
            return this;
        }

        public SearchV1AddressValidationSearchPostSecurity build() {

            return new SearchV1AddressValidationSearchPostSecurity(
                apiKeyHeader);
        }

    }
}
