/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.kintsugi.taxplatform.models.components.CustomerUpdate;
import com.kintsugi.taxplatform.utils.SpeakeasyMetadata;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class UpdateCustomerV1CustomersCustomerIdPutRequest {
    /**
     * Unique identifier of the customer to be retrieved.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=customer_id")
    private String customerId;


    @SpeakeasyMetadata("request:mediaType=application/json")
    private CustomerUpdate customerUpdate;

    @JsonCreator
    public UpdateCustomerV1CustomersCustomerIdPutRequest(
            String customerId,
            CustomerUpdate customerUpdate) {
        Utils.checkNotNull(customerId, "customerId");
        Utils.checkNotNull(customerUpdate, "customerUpdate");
        this.customerId = customerId;
        this.customerUpdate = customerUpdate;
    }

    /**
     * Unique identifier of the customer to be retrieved.
     */
    @JsonIgnore
    public String customerId() {
        return customerId;
    }

    @JsonIgnore
    public CustomerUpdate customerUpdate() {
        return customerUpdate;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Unique identifier of the customer to be retrieved.
     */
    public UpdateCustomerV1CustomersCustomerIdPutRequest withCustomerId(String customerId) {
        Utils.checkNotNull(customerId, "customerId");
        this.customerId = customerId;
        return this;
    }

    public UpdateCustomerV1CustomersCustomerIdPutRequest withCustomerUpdate(CustomerUpdate customerUpdate) {
        Utils.checkNotNull(customerUpdate, "customerUpdate");
        this.customerUpdate = customerUpdate;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateCustomerV1CustomersCustomerIdPutRequest other = (UpdateCustomerV1CustomersCustomerIdPutRequest) o;
        return 
            Utils.enhancedDeepEquals(this.customerId, other.customerId) &&
            Utils.enhancedDeepEquals(this.customerUpdate, other.customerUpdate);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            customerId, customerUpdate);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateCustomerV1CustomersCustomerIdPutRequest.class,
                "customerId", customerId,
                "customerUpdate", customerUpdate);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String customerId;

        private CustomerUpdate customerUpdate;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Unique identifier of the customer to be retrieved.
         */
        public Builder customerId(String customerId) {
            Utils.checkNotNull(customerId, "customerId");
            this.customerId = customerId;
            return this;
        }


        public Builder customerUpdate(CustomerUpdate customerUpdate) {
            Utils.checkNotNull(customerUpdate, "customerUpdate");
            this.customerUpdate = customerUpdate;
            return this;
        }

        public UpdateCustomerV1CustomersCustomerIdPutRequest build() {

            return new UpdateCustomerV1CustomersCustomerIdPutRequest(
                customerId, customerUpdate);
        }

    }
}
