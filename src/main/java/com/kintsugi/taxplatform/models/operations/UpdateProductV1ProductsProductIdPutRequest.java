/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.kintsugi.taxplatform.models.components.ProductUpdate;
import com.kintsugi.taxplatform.utils.SpeakeasyMetadata;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class UpdateProductV1ProductsProductIdPutRequest {
    /**
     * Unique identifier of the product to be updated.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=product_id")
    private String productId;


    @SpeakeasyMetadata("request:mediaType=application/json")
    private ProductUpdate productUpdate;

    @JsonCreator
    public UpdateProductV1ProductsProductIdPutRequest(
            String productId,
            ProductUpdate productUpdate) {
        Utils.checkNotNull(productId, "productId");
        Utils.checkNotNull(productUpdate, "productUpdate");
        this.productId = productId;
        this.productUpdate = productUpdate;
    }

    /**
     * Unique identifier of the product to be updated.
     */
    @JsonIgnore
    public String productId() {
        return productId;
    }

    @JsonIgnore
    public ProductUpdate productUpdate() {
        return productUpdate;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Unique identifier of the product to be updated.
     */
    public UpdateProductV1ProductsProductIdPutRequest withProductId(String productId) {
        Utils.checkNotNull(productId, "productId");
        this.productId = productId;
        return this;
    }

    public UpdateProductV1ProductsProductIdPutRequest withProductUpdate(ProductUpdate productUpdate) {
        Utils.checkNotNull(productUpdate, "productUpdate");
        this.productUpdate = productUpdate;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateProductV1ProductsProductIdPutRequest other = (UpdateProductV1ProductsProductIdPutRequest) o;
        return 
            Utils.enhancedDeepEquals(this.productId, other.productId) &&
            Utils.enhancedDeepEquals(this.productUpdate, other.productUpdate);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            productId, productUpdate);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateProductV1ProductsProductIdPutRequest.class,
                "productId", productId,
                "productUpdate", productUpdate);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String productId;

        private ProductUpdate productUpdate;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Unique identifier of the product to be updated.
         */
        public Builder productId(String productId) {
            Utils.checkNotNull(productId, "productId");
            this.productId = productId;
            return this;
        }


        public Builder productUpdate(ProductUpdate productUpdate) {
            Utils.checkNotNull(productUpdate, "productUpdate");
            this.productUpdate = productUpdate;
            return this;
        }

        public UpdateProductV1ProductsProductIdPutRequest build() {

            return new UpdateProductV1ProductsProductIdPutRequest(
                productId, productUpdate);
        }

    }
}
