/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.operations;

import static com.kintsugi.taxplatform.operations.Operations.RequestOperation;

import com.kintsugi.taxplatform.SDKConfiguration;
import com.kintsugi.taxplatform.models.components.ProductUpdate;
import com.kintsugi.taxplatform.operations.UpdateProductV1ProductsProductIdPut;
import com.kintsugi.taxplatform.utils.Headers;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.String;

public class UpdateProductV1ProductsProductIdPutRequestBuilder {

    private String productId;
    private ProductUpdate productUpdate;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public UpdateProductV1ProductsProductIdPutRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public UpdateProductV1ProductsProductIdPutRequestBuilder productId(String productId) {
        Utils.checkNotNull(productId, "productId");
        this.productId = productId;
        return this;
    }

    public UpdateProductV1ProductsProductIdPutRequestBuilder productUpdate(ProductUpdate productUpdate) {
        Utils.checkNotNull(productUpdate, "productUpdate");
        this.productUpdate = productUpdate;
        return this;
    }


    private UpdateProductV1ProductsProductIdPutRequest buildRequest() {

        UpdateProductV1ProductsProductIdPutRequest request = new UpdateProductV1ProductsProductIdPutRequest(productId,
            productUpdate);

        return request;
    }

    public UpdateProductV1ProductsProductIdPutResponse call() {
        
        RequestOperation<UpdateProductV1ProductsProductIdPutRequest, UpdateProductV1ProductsProductIdPutResponse> operation
              = new UpdateProductV1ProductsProductIdPut.Sync(sdkConfiguration, _headers);
        UpdateProductV1ProductsProductIdPutRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
