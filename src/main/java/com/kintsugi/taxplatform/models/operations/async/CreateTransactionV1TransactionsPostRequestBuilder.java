/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.operations.async;

import static com.kintsugi.taxplatform.operations.Operations.AsyncRequestOperation;

import com.kintsugi.taxplatform.SDKConfiguration;
import com.kintsugi.taxplatform.models.components.TransactionPublicRequest;
import com.kintsugi.taxplatform.operations.CreateTransactionV1TransactionsPost;
import com.kintsugi.taxplatform.utils.Headers;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.Exception;
import java.util.concurrent.CompletableFuture;

public class CreateTransactionV1TransactionsPostRequestBuilder {

    private TransactionPublicRequest request;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public CreateTransactionV1TransactionsPostRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public CreateTransactionV1TransactionsPostRequestBuilder request(TransactionPublicRequest request) {
        Utils.checkNotNull(request, "request");
        this.request = request;
        return this;
    }

    public CompletableFuture<CreateTransactionV1TransactionsPostResponse> call() throws Exception {
        
        AsyncRequestOperation<TransactionPublicRequest, CreateTransactionV1TransactionsPostResponse> operation
              = new CreateTransactionV1TransactionsPost.Async(sdkConfiguration, _headers);

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
