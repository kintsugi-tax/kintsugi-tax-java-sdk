/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.operations.async;

import static com.kintsugi.taxplatform.operations.Operations.AsyncRequestOperation;

import com.kintsugi.taxplatform.SDKConfiguration;
import com.kintsugi.taxplatform.models.operations.DeregisterRegistrationV1RegistrationsRegistrationIdDeregisterPostRequest;
import com.kintsugi.taxplatform.operations.DeregisterRegistrationV1RegistrationsRegistrationIdDeregisterPost;
import com.kintsugi.taxplatform.utils.Headers;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.String;
import java.util.concurrent.CompletableFuture;

public class DeregisterRegistrationV1RegistrationsRegistrationIdDeregisterPostRequestBuilder {

    private String registrationId;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public DeregisterRegistrationV1RegistrationsRegistrationIdDeregisterPostRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public DeregisterRegistrationV1RegistrationsRegistrationIdDeregisterPostRequestBuilder registrationId(String registrationId) {
        Utils.checkNotNull(registrationId, "registrationId");
        this.registrationId = registrationId;
        return this;
    }


    private DeregisterRegistrationV1RegistrationsRegistrationIdDeregisterPostRequest buildRequest() {

        DeregisterRegistrationV1RegistrationsRegistrationIdDeregisterPostRequest request = new DeregisterRegistrationV1RegistrationsRegistrationIdDeregisterPostRequest(registrationId);

        return request;
    }

    public CompletableFuture<DeregisterRegistrationV1RegistrationsRegistrationIdDeregisterPostResponse> call() {
        
        AsyncRequestOperation<DeregisterRegistrationV1RegistrationsRegistrationIdDeregisterPostRequest, DeregisterRegistrationV1RegistrationsRegistrationIdDeregisterPostResponse> operation
              = new DeregisterRegistrationV1RegistrationsRegistrationIdDeregisterPost.Async(sdkConfiguration, _headers);
        DeregisterRegistrationV1RegistrationsRegistrationIdDeregisterPostRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
