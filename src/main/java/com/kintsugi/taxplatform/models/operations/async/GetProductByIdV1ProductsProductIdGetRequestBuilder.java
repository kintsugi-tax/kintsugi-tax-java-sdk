/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.operations.async;

import static com.kintsugi.taxplatform.operations.Operations.AsyncRequestOperation;

import com.kintsugi.taxplatform.SDKConfiguration;
import com.kintsugi.taxplatform.models.operations.GetProductByIdV1ProductsProductIdGetRequest;
import com.kintsugi.taxplatform.operations.GetProductByIdV1ProductsProductIdGet;
import com.kintsugi.taxplatform.utils.Headers;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.String;
import java.util.concurrent.CompletableFuture;

public class GetProductByIdV1ProductsProductIdGetRequestBuilder {

    private String productId;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public GetProductByIdV1ProductsProductIdGetRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public GetProductByIdV1ProductsProductIdGetRequestBuilder productId(String productId) {
        Utils.checkNotNull(productId, "productId");
        this.productId = productId;
        return this;
    }


    private GetProductByIdV1ProductsProductIdGetRequest buildRequest() {

        GetProductByIdV1ProductsProductIdGetRequest request = new GetProductByIdV1ProductsProductIdGetRequest(productId);

        return request;
    }

    public CompletableFuture<GetProductByIdV1ProductsProductIdGetResponse> call() {
        
        AsyncRequestOperation<GetProductByIdV1ProductsProductIdGetRequest, GetProductByIdV1ProductsProductIdGetResponse> operation
              = new GetProductByIdV1ProductsProductIdGet.Async(sdkConfiguration, _headers);
        GetProductByIdV1ProductsProductIdGetRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
