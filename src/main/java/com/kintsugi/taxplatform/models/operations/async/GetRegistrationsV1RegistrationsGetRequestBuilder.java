/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.operations.async;

import static com.kintsugi.taxplatform.operations.Operations.AsyncRequestOperation;

import com.kintsugi.taxplatform.SDKConfiguration;
import com.kintsugi.taxplatform.models.operations.GetRegistrationsV1RegistrationsGetRequest;
import com.kintsugi.taxplatform.operations.GetRegistrationsV1RegistrationsGet;
import com.kintsugi.taxplatform.utils.Headers;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.Exception;
import java.util.concurrent.CompletableFuture;

public class GetRegistrationsV1RegistrationsGetRequestBuilder {

    private GetRegistrationsV1RegistrationsGetRequest request;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public GetRegistrationsV1RegistrationsGetRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public GetRegistrationsV1RegistrationsGetRequestBuilder request(GetRegistrationsV1RegistrationsGetRequest request) {
        Utils.checkNotNull(request, "request");
        this.request = request;
        return this;
    }

    public CompletableFuture<GetRegistrationsV1RegistrationsGetResponse> call() throws Exception {
        
        AsyncRequestOperation<GetRegistrationsV1RegistrationsGetRequest, GetRegistrationsV1RegistrationsGetResponse> operation
              = new GetRegistrationsV1RegistrationsGet.Async(sdkConfiguration, _headers);

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
