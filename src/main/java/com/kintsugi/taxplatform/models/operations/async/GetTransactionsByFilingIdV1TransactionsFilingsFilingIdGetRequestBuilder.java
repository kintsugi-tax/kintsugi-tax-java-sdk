/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.kintsugi.taxplatform.models.operations.async;

import static com.kintsugi.taxplatform.operations.Operations.AsyncRequestOperation;

import com.kintsugi.taxplatform.SDKConfiguration;
import com.kintsugi.taxplatform.models.operations.GetTransactionsByFilingIdV1TransactionsFilingsFilingIdGetRequest;
import com.kintsugi.taxplatform.operations.GetTransactionsByFilingIdV1TransactionsFilingsFilingIdGet;
import com.kintsugi.taxplatform.utils.Headers;
import com.kintsugi.taxplatform.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.concurrent.CompletableFuture;

public class GetTransactionsByFilingIdV1TransactionsFilingsFilingIdGetRequestBuilder {

    private String filingId;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public GetTransactionsByFilingIdV1TransactionsFilingsFilingIdGetRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public GetTransactionsByFilingIdV1TransactionsFilingsFilingIdGetRequestBuilder filingId(String filingId) {
        Utils.checkNotNull(filingId, "filingId");
        this.filingId = filingId;
        return this;
    }


    private GetTransactionsByFilingIdV1TransactionsFilingsFilingIdGetRequest buildRequest() {

        GetTransactionsByFilingIdV1TransactionsFilingsFilingIdGetRequest request = new GetTransactionsByFilingIdV1TransactionsFilingsFilingIdGetRequest(filingId);

        return request;
    }

    public CompletableFuture<GetTransactionsByFilingIdV1TransactionsFilingsFilingIdGetResponse> call() throws Exception {
        
        AsyncRequestOperation<GetTransactionsByFilingIdV1TransactionsFilingsFilingIdGetRequest, GetTransactionsByFilingIdV1TransactionsFilingsFilingIdGetResponse> operation
              = new GetTransactionsByFilingIdV1TransactionsFilingsFilingIdGet.Async(sdkConfiguration, _headers);
        GetTransactionsByFilingIdV1TransactionsFilingsFilingIdGetRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
