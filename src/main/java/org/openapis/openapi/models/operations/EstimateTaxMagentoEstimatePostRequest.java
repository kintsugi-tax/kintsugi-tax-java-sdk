/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import org.openapis.openapi.models.components.MagentoTaxEstimationRequest;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;

public class EstimateTaxMagentoEstimatePostRequest {

    /**
     * The unique identifier for the organization making the request
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-organization-id")
    private Optional<String> xOrganizationId;

    @SpeakeasyMetadata("request:mediaType=application/json")
    private MagentoTaxEstimationRequest magentoTaxEstimationRequest;

    @JsonCreator
    public EstimateTaxMagentoEstimatePostRequest(
            Optional<String> xOrganizationId,
            MagentoTaxEstimationRequest magentoTaxEstimationRequest) {
        Utils.checkNotNull(xOrganizationId, "xOrganizationId");
        Utils.checkNotNull(magentoTaxEstimationRequest, "magentoTaxEstimationRequest");
        this.xOrganizationId = xOrganizationId;
        this.magentoTaxEstimationRequest = magentoTaxEstimationRequest;
    }
    
    public EstimateTaxMagentoEstimatePostRequest(
            MagentoTaxEstimationRequest magentoTaxEstimationRequest) {
        this(Optional.empty(), magentoTaxEstimationRequest);
    }

    /**
     * The unique identifier for the organization making the request
     */
    @JsonIgnore
    public Optional<String> xOrganizationId() {
        return xOrganizationId;
    }

    @JsonIgnore
    public MagentoTaxEstimationRequest magentoTaxEstimationRequest() {
        return magentoTaxEstimationRequest;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The unique identifier for the organization making the request
     */
    public EstimateTaxMagentoEstimatePostRequest withXOrganizationId(String xOrganizationId) {
        Utils.checkNotNull(xOrganizationId, "xOrganizationId");
        this.xOrganizationId = Optional.ofNullable(xOrganizationId);
        return this;
    }

    /**
     * The unique identifier for the organization making the request
     */
    public EstimateTaxMagentoEstimatePostRequest withXOrganizationId(Optional<String> xOrganizationId) {
        Utils.checkNotNull(xOrganizationId, "xOrganizationId");
        this.xOrganizationId = xOrganizationId;
        return this;
    }

    public EstimateTaxMagentoEstimatePostRequest withMagentoTaxEstimationRequest(MagentoTaxEstimationRequest magentoTaxEstimationRequest) {
        Utils.checkNotNull(magentoTaxEstimationRequest, "magentoTaxEstimationRequest");
        this.magentoTaxEstimationRequest = magentoTaxEstimationRequest;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EstimateTaxMagentoEstimatePostRequest other = (EstimateTaxMagentoEstimatePostRequest) o;
        return 
            Objects.deepEquals(this.xOrganizationId, other.xOrganizationId) &&
            Objects.deepEquals(this.magentoTaxEstimationRequest, other.magentoTaxEstimationRequest);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            xOrganizationId,
            magentoTaxEstimationRequest);
    }
    
    @Override
    public String toString() {
        return Utils.toString(EstimateTaxMagentoEstimatePostRequest.class,
                "xOrganizationId", xOrganizationId,
                "magentoTaxEstimationRequest", magentoTaxEstimationRequest);
    }
    
    public final static class Builder {
 
        private Optional<String> xOrganizationId = Optional.empty();
 
        private MagentoTaxEstimationRequest magentoTaxEstimationRequest;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The unique identifier for the organization making the request
         */
        public Builder xOrganizationId(String xOrganizationId) {
            Utils.checkNotNull(xOrganizationId, "xOrganizationId");
            this.xOrganizationId = Optional.ofNullable(xOrganizationId);
            return this;
        }

        /**
         * The unique identifier for the organization making the request
         */
        public Builder xOrganizationId(Optional<String> xOrganizationId) {
            Utils.checkNotNull(xOrganizationId, "xOrganizationId");
            this.xOrganizationId = xOrganizationId;
            return this;
        }

        public Builder magentoTaxEstimationRequest(MagentoTaxEstimationRequest magentoTaxEstimationRequest) {
            Utils.checkNotNull(magentoTaxEstimationRequest, "magentoTaxEstimationRequest");
            this.magentoTaxEstimationRequest = magentoTaxEstimationRequest;
            return this;
        }
        
        public EstimateTaxMagentoEstimatePostRequest build() {
            return new EstimateTaxMagentoEstimatePostRequest(
                xOrganizationId,
                magentoTaxEstimationRequest);
        }
    }
}
